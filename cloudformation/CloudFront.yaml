Parameters:
  customDomainName:
    Type: String
    Description: Custom Domain Name for blog. ex. subdomain.yourdomain.com
  HostedZoneId:
    Type: String
    Description: Hosted Zone ID for domain in route 53
  CertficateARN:
    Type: String
    Description: Certficate Manager certficate amazon resource name(ARN), FROM us-east-1

AWSTemplateFormatVersion: '2010-09-09'
Resources:
  staticSiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  staticSiteBucketLogging:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  s3Origin:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: Blog s3 Origin
        Name: !Sub myBlog-${AWS::Region}
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  cloudFrontBlog:
    Type: AWS::CloudFront::Distribution
    Properties: 
      DistributionConfig: 
        Aliases: 
          - !Ref customDomainName
        Comment: Static Site hosting for blog
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS         
          TargetOriginId: !Ref customDomainName
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: Yes
          OriginRequestPolicyId: "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf"
          ResponseHeadersPolicyId: "eaab4381-ed33-4a86-88ca-d9558dc6cd63"
        CacheBehaviors:
          - AllowedMethods: 
              - GET
              - HEAD
              - DELETE
              - POST
              - OPTIONS
              - PUT
              - PATCH
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
            Compress: True
            PathPattern: /api*
            TargetOriginId: !Sub "${customDomainName}/api"
            ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: false
        Origins: 
          - DomainName: !GetAtt staticSiteBucket.DomainName
            Id: !Ref customDomainName
            OriginAccessControlId: !GetAtt s3Origin.Id
            S3OriginConfig: 
              OriginAccessIdentity: ''
          - DomainName: !ImportValue apiInvokeUrl
            Id: !Sub "${customDomainName}/api"
            OriginPath: !ImportValue defaultStage
            CustomOriginConfig:
              HTTPSPort: 443
              OriginProtocolPolicy: 'https-only'
              OriginSSLProtocols: 
                - TLSv1.2
        ViewerCertificate:
          AcmCertificateArn: !Ref CertficateARN
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Logging:
          Bucket: !GetAtt staticSiteBucketLogging.DomainName
  StaticResourcesBucketPolicy:  
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref staticSiteBucket
      PolicyDocument:
        Version: '2008-10-17'
        Id: !Sub s3-cloudfront-${customDomainName}
        Statement:
          - Sid: !Sub allow-cloudfront-s3-${customDomainName}
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${staticSiteBucket}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${cloudFrontBlog}
  Route53ARecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref customDomainName
      HostedZoneId: !Ref HostedZoneId
      AliasTarget: 
        DNSName: !GetAtt cloudFrontBlog.DomainName
        EvaluateTargetHealth: false
        HostedZoneId: Z2FDTNDATAQYW2
      Type: A